import nmap
import time
from datetime import datetime

def —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å_–ø–æ—Ä—Ç(—Ö–æ—Å—Ç, –ø–æ—Ä—Ç):
    """–°–∫–∞–Ω–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –ø–æ—Ä—Ç –Ω–∞ —Ö–æ—Å—Ç–µ."""
    —Å–∫–∞–Ω–µ—Ä = nmap.PortScanner()
    try:
        —Ä–µ–∑—É–ª—å—Ç–∞—Ç = —Å–∫–∞–Ω–µ—Ä.scan(hosts=—Ö–æ—Å—Ç, ports=str(–ø–æ—Ä—Ç), arguments='-v -sS')
        return —Ä–µ–∑—É–ª—å—Ç–∞—Ç['scan'][—Ö–æ—Å—Ç]['tcp'][–ø–æ—Ä—Ç]['state']
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å_—Ö–æ—Å—Ç(—Ö–æ—Å—Ç, –ø–æ—Ä—Ç—ã='1-1024'):
    """–°–∫–∞–Ω–∏—Ä—É–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤ –Ω–∞ —Ö–æ—Å—Ç–µ."""
    —Å–∫–∞–Ω–µ—Ä = nmap.PortScanner()
    try:
        print(f"üîç –°–∫–∞–Ω–∏—Ä—É—é {—Ö–æ—Å—Ç} (–ø–æ—Ä—Ç—ã {–ø–æ—Ä—Ç—ã})...")
        start_time = time.time()
        —Å–∫–∞–Ω–µ—Ä.scan(hosts=—Ö–æ—Å—Ç, ports=–ø–æ—Ä—Ç—ã, arguments='-v -sS')
        elapsed = time.time() - start_time
        
        print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è {—Ö–æ—Å—Ç}:")
        for proto in —Å–∫–∞–Ω–µ—Ä[—Ö–æ—Å—Ç].all_protocols():
            print(f"üì° –ü—Ä–æ—Ç–æ–∫–æ–ª: {proto}")
            ports = —Å–∫–∞–Ω–µ—Ä[—Ö–æ—Å—Ç][proto].keys()
            for port in ports:
                state = —Å–∫–∞–Ω–µ—Ä[—Ö–æ—Å—Ç][proto][port]['state']
                print(f"  –ü–æ—Ä—Ç {port}: {state}")
        
        print(f"\n‚è± –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed:.2f} —Å–µ–∫.")
    except Exception as e:
        print(f"üí¢ –û—à–∏–±–∫–∞: {str(e)}")

def –≥–ª–∞–≤–Ω–æ–µ_–º–µ–Ω—é():
    """–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    print("üéå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ù–∏–Ω–¥–∑—è-–°–∫–∞–Ω–µ—Ä 3000")
    print(f"üìÖ –°–µ–≥–æ–¥–Ω—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    while True:
        print("\n‚öîÔ∏è –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–¥–∏–Ω –ø–æ—Ä—Ç")
        print("2. –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤")
        print("3. –í—ã–π—Ç–∏")
        
        –≤—ã–±–æ—Ä = input("> ")
        
        if –≤—ã–±–æ—Ä == "1":
            —Ö–æ—Å—Ç = input("–í–≤–µ–¥–∏ IP –∏–ª–∏ –¥–æ–º–µ–Ω: ")
            –ø–æ—Ä—Ç = input("–í–≤–µ–¥–∏ –ø–æ—Ä—Ç: ")
            print(f"\nüîé –°—Ç–∞—Ç—É—Å –ø–æ—Ä—Ç–∞ {–ø–æ—Ä—Ç}: {—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å_–ø–æ—Ä—Ç(—Ö–æ—Å—Ç, int(–ø–æ—Ä—Ç))}")
        
        elif –≤—ã–±–æ—Ä == "2":
            —Ö–æ—Å—Ç = input("–í–≤–µ–¥–∏ IP –∏–ª–∏ –¥–æ–º–µ–Ω: ")
            –ø–æ—Ä—Ç—ã = input("–í–≤–µ–¥–∏ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1-1000): ")
            —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å_—Ö–æ—Å—Ç(—Ö–æ—Å—Ç, –ø–æ—Ä—Ç—ã)
        
        elif –≤—ã–±–æ—Ä == "3":
            print("üåå –°–∫–∞–Ω–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ —Ç–µ–Ω—å...")
            break
        
        else:
            print("üí¢ –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

if __name__ == "__main__":
    –≥–ª–∞–≤–Ω–æ–µ_–º–µ–Ω—é()